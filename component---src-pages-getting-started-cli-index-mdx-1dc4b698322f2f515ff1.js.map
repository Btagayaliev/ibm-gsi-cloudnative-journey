{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/getting-started/cli/index.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","BackToTopBtn","_frontmatter","makeShortcode","name","console","warn","PageDescription","Accordion","AccordionItem","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent"],"mappings":"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","file":"component---src-pages-getting-started-cli-index-mdx-1dc4b698322f2f515ff1.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const currentTabRegex = new RegExp(`${currentTab}(?!-)`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport BackToTopBtn from '../components/BackToTopBtn';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug\n        .split('/')\n        .filter(Boolean)\n        .slice(-1)[0] || slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n    >\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <BackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mjperrins/projects/gsi/ibm-gsi-cloudnative-journey/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Accordion = makeShortcode(\"Accordion\");\nconst AccordionItem = makeShortcode(\"AccordionItem\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<Globals name=\"shortName\" mdxType=\"Globals\" />{` Command Line Interface (CLI)`}</p>\n    </PageDescription>\n    <p>{`The `}<Globals name=\"longName\" mdxType=\"Globals\" />{` includes the IBM Garage for Cloud (IGC) Command Line Interface (CLI). The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-garage-cloud/ibm-garage-cloud-cli\"\n      }}><Globals name=\"igccli\" mdxType=\"Globals\" /></a>{` provides a set of helpful utilities that can be invoked from the command line. The main objective is to make complicated CLI tasks and `}<inlineCode parentName=\"p\">{`YAML`}</inlineCode>{`,`}<inlineCode parentName=\"p\">{`configMap`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`secret`}</inlineCode>{` configuration easier for a developer.`}</p>\n    <p>{`These utilities include:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Register your application’s git repo into a CI pipeline (`}<a parentName=\"li\" {...{\n          \"href\": \"/gsi-labs/ibm-gsi-cloudnative-journey/guides/continuous-integration\"\n        }}>{`Jenkins`}</a>{`, `}<a parentName=\"li\" {...{\n          \"href\": \"/gsi-labs/ibm-gsi-cloudnative-journey/guides/continuous-integration-tekton\"\n        }}>{`Tekton`}</a>{`, etc.)`}</li>\n      <li parentName=\"ul\">{`List the ingress URLs for the tools installed in the environment`}</li>\n      <li parentName=\"ul\">{`List the user names and passwords for the tools installed in the environment`}</li>\n      <li parentName=\"ul\">{`Build and deploy images to the environment using the IBM Cloud Image Registry`}</li>\n      <li parentName=\"ul\">{`Help copy `}<inlineCode parentName=\"li\">{`configMaps`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`secrets`}</inlineCode>{` into new projects/namespace in Kubernetes or OpenShift`}</li>\n      <li parentName=\"ul\">{`Enable existing `}<Globals name=\"templates\" mdxType=\"Globals\" />{` with the necessary artifacts to be integrated easily into the `}<Globals name=\"env\" mdxType=\"Globals\" /></li>\n    </ul>\n    <p>{`You can either install the CLI onto your computer or install the Cloud Shell Commands environment.`}</p>\n    <Accordion mdxType=\"Accordion\">\n      <AccordionItem title=\"Install the CLI\" mdxType=\"AccordionItem\">\n        <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n**Warning:** If you have installed the **IGC** CLI up to `v0.4.0` you must\n uninstall it and follow the installation steps below\n`npm rm -g @garage-catalyst/ibm-garage-cloud-cli`\n        </InlineNotification>\n        <ul>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Install the CLI:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`npm i -g @ibmgaragecloud/cloud-native-toolkit-cli\n`}</code></pre>\n          </li>\n          <li parentName=\"ul\">\n            <p parentName=\"li\">{`Verify the version:`}</p>\n            <pre parentName=\"li\"><code parentName=\"pre\" {...{\n                \"className\": \"language-bash\"\n              }}>{`igc --version\n`}</code></pre>\n          </li>\n        </ul>\n      </AccordionItem>\n      <AccordionItem title=\"Install the Cloud Shell\" mdxType=\"AccordionItem\">\n        <p>{`Follow the instructions in the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-garage-cloud/cloud-shell-commands/blob/master/README.md\"\n          }}>{`cloud-shell-commands readme`}</a>{` to install the Cloud Shell Commands.`}</p>\n      </AccordionItem>\n    </Accordion>\n    <h2>{`CLI help`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Run the CLI’s help command to list the available commands:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`igc --help\n`}</code></pre>\n        <p parentName=\"li\">{`  The help output looks like this:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`$ igc --help\nIBM Garage Cloud CLI\n\nUsage: igc <command> [args]\n\nCommands:\n  igc build              Build the image and push it into the IBM Cloud registry\n  igc create-webhook     Create a git webhook for a given Jenkins pipeline\n  igc credentials        Lists the urls and credentials for the tools deployed\n                         to the cluster\n  igc dashboard          Open the dashboard url in the default browser\n  igc deploy             Deploy an image from the IBM Cloud registry into a\n                         kubernetes cluster\n  igc enable             Enable the current repository with pipeline logic\n  igc endpoints          List the current ingress hosts for deployed apps in a\n                         namespace       [aliases: ingress, endpoint, ingresses]\n  igc generate-token     Generate a Jenkins api token\n  igc git-secret [name]  Create a kubernetes secret that contains the url,\n                         username, and personal access token for a git repo\n  igc jenkins-auth       Generate a Jenkins api token and register it as\n                         kubernetes secret\n  igc launch-tools       Launch the IBM Garage for Cloud tools image connected\n                         to the current directory\n  igc login              Log in using the ibmcloud cli, optionally configure the\n                         cluster, and optionally runs a command\n  igc namespace          Create a namespace (if it doesn't exist) and prepare it\n                         with the necessary configuration\n  igc pipeline           Register a pipeline for the current code repository\n  igc tool-config        Create the config map and secret for a tool configured\n                         in the environment\n  igc vlan               Print out the vlan values\n  igc yq <command>\n\nOptions:\n  --version  Show version number                                       [boolean]\n  --help     Show help                                                 [boolean]\n`}</code></pre>\n      </li>\n    </ul>\n    <h2>{`Use the CLI`}</h2>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`To use the `}<Globals name=\"igccli\" mdxType=\"Globals\" />{`, first install the `}<a parentName=\"p\" {...{\n          \"href\": \"/gsi-labs/ibm-gsi-cloudnative-journey/getting-started/prereqs\"\n        }}>{`prerequisite tools`}</a>{`, which include:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`The `}<Globals name=\"ic\" mdxType=\"Globals\" />{` CLI`}</li>\n        <li parentName=\"ul\">{`The `}<Globals name=\"kube\" mdxType=\"Globals\" />{` CLI`}</li>\n        <li parentName=\"ul\">{`The `}<Globals name=\"ocp\" mdxType=\"Globals\" />{` CLI`}</li>\n      </ul>\n    </InlineNotification>\n    <p>{`To use the `}<Globals name=\"igccli\" mdxType=\"Globals\" />{`, you must be logged into your `}<Globals name=\"ic\" mdxType=\"Globals\" />{` account and cluster.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Log into your `}<Globals name=\"ic\" mdxType=\"Globals\" />{` account with the correct region and resource group:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`ibmcloud login -a cloud.ibm.com -r <region> -g <resource group>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Log into your cluster:`}</p>\n      </li>\n    </ul>\n    <Accordion mdxType=\"Accordion\">\n      <AccordionItem title=\"Kubernetes\" mdxType=\"AccordionItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`ibmcloud ks cluster config --cluster <CLUSTER>\n`}</code></pre>\n      </AccordionItem>\n      <AccordionItem title=\"OpenShift\" mdxType=\"AccordionItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`oc login --server=<url> --token=<apikey>\n`}</code></pre>\n      </AccordionItem>\n    </Accordion>\n    <p>{`Once logged in, you can use the CLI commands.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`For example, this command lists the dashboard ingress URLs for all of the install tools in the tools namespace:`}<pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`igc endpoints -n tools\n`}</code></pre></li>\n    </ul>\n    <h2>{`Available commands`}</h2>\n    <h3>{`vlan`}</h3>\n    <p>{`Lists the `}<inlineCode parentName=\"p\">{`vlans`}</inlineCode>{` for a particular `}<inlineCode parentName=\"p\">{`resource group`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`region`}</inlineCode>{`. The command\nexpects that an `}<inlineCode parentName=\"p\">{`ibmcloud login`}</inlineCode>{` has already been performed to set up the\nenvironment. This information is useful for preparing Terraform cluster creation steps`}</p>\n    <h3>{`credentials`}</h3>\n    <p>{`Prints the urls and credentials for the tools deployed into the cluster.\nThis includes Jenkins, Argo CD, and SonarQube, Pact, Artifactory.`}</p>\n    <h3>{`ingress`}</h3>\n    <p>{`Lists the ingress urls for the provided namespace. If no namespace\nis provided, `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{` is used.`}</p>\n    <h3>{`namespace`}</h3>\n    <p>{`Creates a new namespace/project in your cluster and copies the necessary `}<inlineCode parentName=\"p\">{`configMaps`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`secrets`}</inlineCode>{` from the `}<inlineCode parentName=\"p\">{`tools`}</inlineCode>{` namespace.\nThis enables new pipelines to be registered and run and for them to have access to all the essential data needed to access the tools and the `}<Globals name=\"ic\" mdxType=\"Globals\" />{` platfrom.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`igc namespace dev-team-a\n`}</code></pre>\n    <h3>{`pipeline`}</h3>\n    <p>{`Registers a git repository project as a Jenkins pipeline by creating a Kubernetes secret to hold\nthe Git authentication information, calling the Jenkins API, and creating a web-hook.\nThis command is intended to be run within the repository directory of a project for\nwhich a pipeline should be generated. You can supply a new namespace for your pipeline`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`igc pipeline -n dev-team-a\n`}</code></pre>\n    <p>{`The pipeline command supports both `}<inlineCode parentName=\"p\">{`jenkins`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`tekton`}</inlineCode>{` pipelines using the flags `}<inlineCode parentName=\"p\">{`--jenkins`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--tekton`}</inlineCode>{`,\nrespectively.  Jenkins is the default if no value is provided.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`igc pipeline -n dev-team-a --tekton\n`}</code></pre>\n    <h3>{`tools`}</h3>\n    <p>{`Launches the `}<inlineCode parentName=\"p\">{`ibm-garage-cli-tools`}</inlineCode>{` docker image in an interactive\nterminal. This image provides commonly used infrastructure tools like,\n`}<inlineCode parentName=\"p\">{`terraform`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`oc`}</inlineCode>{` etc.`}</p>\n    <h3>{`enable`}</h3>\n    <p>{`“Enables” an existing project with the DevOps artifacts. The CLI reads the\nlist of\navailable pipelines and applies the selected pipeline to your code repo. This\ncommand is\nintended to be run within a git repository directory of a project for\nwhich a pipeline should be enabled.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`igc enable\n`}</code></pre>\n    <p>{`Once the project has been enabled you will need to run `}<inlineCode parentName=\"p\">{`igc pipeline`}</inlineCode>{` to\nregister the git repo as a pipeline with your target development cluster.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`enable`}</inlineCode>{` command adds a number of files to the local filesystem, including but not limited to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Helm chart`}</li>\n      <li parentName=\"ul\">{`Dockerfile`}</li>\n      <li parentName=\"ul\">{`Jenkinsfile`}</li>\n    </ul>\n    <p>{`After `}<inlineCode parentName=\"p\">{`enable`}</inlineCode>{` is called, the generated files should be committed and pushed to the git repository.`}</p>\n    <p>{`The default pipeline repo is `}<inlineCode parentName=\"p\">{`https://ibm-garage-cloud.github.io/garage-pipelines/`}</inlineCode>{`, but a different one can be used by providing the `}<inlineCode parentName=\"p\">{`--repo`}</inlineCode>{` argument.  The source for the provided pipeline repo can be found at `}<inlineCode parentName=\"p\">{`https://github.com/ibm-garage-cloud/garage-pipelines`}</inlineCode>{` to use as a template.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}