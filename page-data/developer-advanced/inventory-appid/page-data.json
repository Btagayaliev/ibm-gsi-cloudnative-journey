{"componentChunkName":"component---src-pages-developer-advanced-inventory-appid-index-mdx","path":"/developer-advanced/inventory-appid/","result":{"pageContext":{"frontmatter":{"title":"App ID Integration"},"relativePagePath":"/developer-advanced/inventory-appid/index.mdx","titleType":"page","MdxNode":{"id":"f3538be5-cec2-58e9-ac7a-f16f279c4ada","children":[],"parent":"c0aff3d4-b732-5ded-adb2-2a340c5c18e1","internal":{"content":"---\ntitle: App ID Integration\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nSecuring Inventory App with App ID\n\n</PageDescription>\n\nTo secure the application we are using the capabilities available within the IBMCloud platform that use\na simple annotation on the ingress to enable integration with AppId. The <Globals name=\"templates\" /> have already been\nset up to use this feature and all that is required is update the configuration within the `values.yaml`\nfile of the helm chart.\n\n### Inventory Management UI\n\n- Find the app id binding secret by running the following command from a terminal where the kubernetes context has been set up (i.e. `oc login` has been done)\n    ```bash\n    kubectl get -n dev secrets | grep -E \"binding.*appid\"\n    ```\n\n- Update the `values.yaml` file in the Inventory Management UI chart to set `ingress.appId.enabled=true` and to \n    set the value for the AppId binding secret from the previous step\n    ```yaml path=/chart/template-node-react/values.yaml\n    ...\n\n    ingress:\n      enabled: true\n      appid:\n        enabled: true\n        # web or app - https://cloud.ibm.com/docs/services/appid?topic=appid-kube-auth\n        requestType: web\n        binding:\n          name: \"{binding secret}\"\n          namespace: dev\n        ...\n    ```\n\n### AppId redirect url config\n\n- Get the ingress for the UI component by running `igc ingress -n dev-{initials}`.\n\n- Open the IBM Cloud resource list - `https://cloud.ibm.com/resources`\n\n- Open the AppId instance to the `Manage Authentication` -> `Authentication Settings` view\n\n    ![AppId authentication settings](images/appid-authentication-settings.png)\n\n- Add the redirect url for the application to the web redirect URLs. The redirect url will have\nthe following form:\n\n    `{ingress url}/appid_callback`\n    \n    e.g. `https://inventory-manangement-ui-dev.sms-test-oc-cluster.us-east.containers.appdomain.cloud/appid_callback`\n\n### Add users to AppId\n\n- Open the AppId instance to `Cloud Directory` -> `Users`\n\n    ![AppId cloud directory users](images/appid-cloud-directory-users.png)\n\n- Add yourself as a user with an email address, name, and password\n\n### Access the UI\n\n- Open a browser to the UI ingress\n\n- You should be met with the AppId login screen. (This screen can be customized from the AppId service console but for now we are showing the default screen.)\n\n- Provide the email address and password you configured in the previous steps. You should be granted access to the UI.\n","type":"Mdx","contentDigest":"c2fd56c6878f6e520abdb74973939c6a","counter":825,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"App ID Integration"},"exports":{},"rawBody":"---\ntitle: App ID Integration\n---\n\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\n\n<PageDescription>\n\nSecuring Inventory App with App ID\n\n</PageDescription>\n\nTo secure the application we are using the capabilities available within the IBMCloud platform that use\na simple annotation on the ingress to enable integration with AppId. The <Globals name=\"templates\" /> have already been\nset up to use this feature and all that is required is update the configuration within the `values.yaml`\nfile of the helm chart.\n\n### Inventory Management UI\n\n- Find the app id binding secret by running the following command from a terminal where the kubernetes context has been set up (i.e. `oc login` has been done)\n    ```bash\n    kubectl get -n dev secrets | grep -E \"binding.*appid\"\n    ```\n\n- Update the `values.yaml` file in the Inventory Management UI chart to set `ingress.appId.enabled=true` and to \n    set the value for the AppId binding secret from the previous step\n    ```yaml path=/chart/template-node-react/values.yaml\n    ...\n\n    ingress:\n      enabled: true\n      appid:\n        enabled: true\n        # web or app - https://cloud.ibm.com/docs/services/appid?topic=appid-kube-auth\n        requestType: web\n        binding:\n          name: \"{binding secret}\"\n          namespace: dev\n        ...\n    ```\n\n### AppId redirect url config\n\n- Get the ingress for the UI component by running `igc ingress -n dev-{initials}`.\n\n- Open the IBM Cloud resource list - `https://cloud.ibm.com/resources`\n\n- Open the AppId instance to the `Manage Authentication` -> `Authentication Settings` view\n\n    ![AppId authentication settings](images/appid-authentication-settings.png)\n\n- Add the redirect url for the application to the web redirect URLs. The redirect url will have\nthe following form:\n\n    `{ingress url}/appid_callback`\n    \n    e.g. `https://inventory-manangement-ui-dev.sms-test-oc-cluster.us-east.containers.appdomain.cloud/appid_callback`\n\n### Add users to AppId\n\n- Open the AppId instance to `Cloud Directory` -> `Users`\n\n    ![AppId cloud directory users](images/appid-cloud-directory-users.png)\n\n- Add yourself as a user with an email address, name, and password\n\n### Access the UI\n\n- Open a browser to the UI ingress\n\n- You should be met with the AppId login screen. (This screen can be customized from the AppId service console but for now we are showing the default screen.)\n\n- Provide the email address and password you configured in the previous steps. You should be granted access to the UI.\n","fileAbsolutePath":"/Users/bwoolf/dev/git/ibm-gsi-ecosystem/ibm-gsi-cloudnative-journey/src/pages/developer-advanced/inventory-appid/index.mdx"}}}}