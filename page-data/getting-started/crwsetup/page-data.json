{"componentChunkName":"component---src-pages-getting-started-crwsetup-index-mdx","path":"/getting-started/crwsetup/","result":{"pageContext":{"frontmatter":{"title":"Code Ready Workspaces Setup"},"relativePagePath":"/getting-started/crwsetup/index.mdx","titleType":"page","MdxNode":{"id":"27ea81df-8d3b-5280-b482-cdc8c37e4aaa","children":[],"parent":"3ba92d3f-f996-5997-935c-b9aa975c31a3","internal":{"content":"---\ntitle: Code Ready Workspaces Setup\n---\n\n<PageDescription>\n\nFollowing steps need to be done by all participants of the workshop while working on CRW <Globals name=\"env\" />\n\n</PageDescription>\n\n\n### Setting up your Workspace on CRW\n\n1. Login to the Openshift Cluster through the Web console, where the Code ready workspace is setup.\n\n2. Access the Code Ready Workspace through the appropriate Code ready workspace URL that would have been shared.\n**Note**:If the code ready workspace is configured through openshiftoAuth, You can access the above URL, once you have logged into the Openshift Cluster\n\n3. If you are accessing it for the first time you need register as the registration page will be shown.  Ensure your user name should have strictly follow .(character allowed are 0-9, a-zand hypen in between), \neven if default values are displaced.Ensure you provide details regarding username, Email, First name and Last name (If SSO is not configured, you need to provide the password as well.\nFrom the second time,you will be directly taken to workspace User Interface in step 4\n\n4. Navigate to  the default Code Ready Workspace link  on your browser as shown in below picture.\n  ![CRW](images/CRW_HomePage.png)\n\n5. You can create the workspace by selecting one of the template stacks as shown in Step 4. Alternatively, navigate to the Workspace and click on the \"Add Workspace\" button.\n  ![Adding Workspace](images/AddWorkspace.png)\n\n6. Provide the workspace as part of the Name field.Click on \"Remove\" button in the Projects section to remove the project template. \nBasically, we are going to create an empty project.\n  ![Creating Project with Empty Template](images/CreatingNewWorkspace.png)\n\n7. Click on \"Create and Open\" button to create and load the workspace. Workspace will start loading. This may take a few minutes as the Container and plug-ins related to the stack has to be created and deployed.\n\n8. Once the workspace is  created and loaded, you can see a vscode editor.\n  ![CRWWorkspace](images/CRWScreen.png)\n\n9. Go to \"Terminal\" menu and select \"Open Terminal in specific container\".\n  ![Open Terminal](images/OpeningTerminal.png)\n\n10. Select the \"Developer Container\".\n\n11. Install igc by running the following commands on the just  newly opened terminal:\n    \n    ```bash\n    git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    export PATH=~/cloud-shell-commands:$PATH\n    source ./cloud-shell-commands/install-igc\n    ```\n    ![igc install on terminal](images/igcInstall.png)\n\n\n\n\n","type":"Mdx","contentDigest":"7b0f2f92185424d96c0fafb041233315","counter":776,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Code Ready Workspaces Setup"},"exports":{},"rawBody":"---\ntitle: Code Ready Workspaces Setup\n---\n\n<PageDescription>\n\nFollowing steps need to be done by all participants of the workshop while working on CRW <Globals name=\"env\" />\n\n</PageDescription>\n\n\n### Setting up your Workspace on CRW\n\n1. Login to the Openshift Cluster through the Web console, where the Code ready workspace is setup.\n\n2. Access the Code Ready Workspace through the appropriate Code ready workspace URL that would have been shared.\n**Note**:If the code ready workspace is configured through openshiftoAuth, You can access the above URL, once you have logged into the Openshift Cluster\n\n3. If you are accessing it for the first time you need register as the registration page will be shown.  Ensure your user name should have strictly follow .(character allowed are 0-9, a-zand hypen in between), \neven if default values are displaced.Ensure you provide details regarding username, Email, First name and Last name (If SSO is not configured, you need to provide the password as well.\nFrom the second time,you will be directly taken to workspace User Interface in step 4\n\n4. Navigate to  the default Code Ready Workspace link  on your browser as shown in below picture.\n  ![CRW](images/CRW_HomePage.png)\n\n5. You can create the workspace by selecting one of the template stacks as shown in Step 4. Alternatively, navigate to the Workspace and click on the \"Add Workspace\" button.\n  ![Adding Workspace](images/AddWorkspace.png)\n\n6. Provide the workspace as part of the Name field.Click on \"Remove\" button in the Projects section to remove the project template. \nBasically, we are going to create an empty project.\n  ![Creating Project with Empty Template](images/CreatingNewWorkspace.png)\n\n7. Click on \"Create and Open\" button to create and load the workspace. Workspace will start loading. This may take a few minutes as the Container and plug-ins related to the stack has to be created and deployed.\n\n8. Once the workspace is  created and loaded, you can see a vscode editor.\n  ![CRWWorkspace](images/CRWScreen.png)\n\n9. Go to \"Terminal\" menu and select \"Open Terminal in specific container\".\n  ![Open Terminal](images/OpeningTerminal.png)\n\n10. Select the \"Developer Container\".\n\n11. Install igc by running the following commands on the just  newly opened terminal:\n    \n    ```bash\n    git clone https://github.com/ibm-garage-cloud/cloud-shell-commands.git\n    export PATH=~/cloud-shell-commands:$PATH\n    source ./cloud-shell-commands/install-igc\n    ```\n    ![igc install on terminal](images/igcInstall.png)\n\n\n\n\n","fileAbsolutePath":"/Users/ramyaraghuveera/Desktop/CloudNative/ibm-gsi-cloudnative-journey/src/pages/getting-started/crwsetup/index.mdx"}}}}